scores = [100, 60, 50, 80, 70]
idx = 0
sussu = list()
while idx < len(scores) :
    print("합격" if scores[idx] >= 70 else "불합격")
    sussu.append("합격" if scores[idx] >= 70 else "불합격")
    idx += 1

print(sussu)
출력
합격
불합격
불합격
합격
합격
['합격', '불합격', '불합격', '합격', '합격'] 

##########################

?range

range(1, 10)
출력
range(1, 10)

# 함수 생성
# 함수의 구조
# def fn1(매개변수1, 매개변수2, 매개변수3) :
#     실행할 코드1
#     실행할 코드2
#     return 반환값

def plus(num1, num2) :
    print(num1 + num2)
    return num1 + num2

result = plus(11, 22)  # 출력되는건 위에 print에 의해서 출력이 되는것이다
3
print(result)   # return에 저장되어 잇는 값이 출력되는 것이다
3

# 무반(반환값 없음) 무파(매개변수 없음)
def al():
    print("무반환, 무파람")

# 유반 무파
def a2():
    print("유반환, 무파람")
    return 3.14

# 무반 유파
def a3(sid, name):
    print("id: ", sid)
    print("name: ", name)
    
# 유반 유파
def a4(ssn, name):    # parameter(파라미터) = 매개변수
    print("주민등록본 정보를 출력합니다")
    return ssn

ssn = a4("m001", "홍길동")   # argument(아규먼트) = 인수
print(ssn)
출력
주민등록본 정보를 출력합니다
m001

################

# for문 학습
# while문 보다 쉬움

list1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

for x in list1 :  # list1에 있는 요소값 중 하나를 x 에 넣겟다는 뜻
    print(x)
출력
1
2
3
4
5
6
7
8
9
10

# 5단을 찍는 dan_5() 함수를 만들어 주세요
# 반복문이 필요하면, for문을 사용하세요
def dan_5() :
    list_nums = [1, 2, 3, 4, 5, 6, 7, 8, 9]
    for i in list_nums : 
        
        print(5, "x", i, "=", 5*1)
        
dan_5()
출력
5 x 1 = 5
5 x 2 = 5
5 x 3 = 5
5 x 4 = 5
5 x 5 = 5
5 x 6 = 5
5 x 7 = 5
5 x 8 = 5
5 x 9 = 5

def dan_51() :
    for i in range(1, 10, 1) :  # range(첫숫자, 끝숫자, 얼마씩(범위)) 범위
        print(5, "x", i, "=", 5*1)
dan_51()
출력
5 x 1 = 5
5 x 2 = 5
5 x 3 = 5
5 x 4 = 5
5 x 5 = 5
5 x 6 = 5
5 x 7 = 5
5 x 8 = 5
5 x 9 = 5

# dan_51() 함수는 5단만 출력하는 함수죠
# 특정 단을 출력하는 함수를 생성 : dan() 함수를 생성하시오
def dan(num) :
    for i in range(1, 10, 1) :
        print(num, "x", i, "=", num*i)
        i = i + 1
        
dan(3)
출력
3 x 1 = 3
3 x 2 = 6
3 x 3 = 9
3 x 4 = 12
3 x 5 = 15
3 x 6 = 18
3 x 7 = 21
3 x 8 = 24
3 x 9 = 27

# 구구단을 다 찍는 gugudan() 함수를 생성하시오. 단 dan() 함수를 이용하시오
def gugudan() :
    for num in range(2, 10, 1) :
        print(num, "단")
        dan(num)  -> 위에 만들어 놓은거임

gugudan()
출력
2~9단 구구단이 나옴

###########################

# dan_7() 함수를 생성, 7단 찍기
# 반복문은 while 문을 이용하세요
def dan_7() :
    num = 7
    print(num, "단")
    
    i = 1
    while i < 10 :
        print(num, "x", i, "=", num*i)
        i = i + 1
dan_7()
출력
7단 나옴

# 구구단 다 출력 : gugudan2()
# 반복문은 while문을 사용하고
# dan2()함수를 이용하세요
def gugudan2() :
    dan = 2
    while dan < 10 :
        print(dan, "단")
        dan2(dan)
        
        dan = dan + 1
          

gugudan2()
출력
2~9단 다 나옴

# 소수인지 판별하기
# 반복문은 for문
#isPrimaryNum_713()함수 : 713이 소수인지 여부를 판별해 주는 함수
# 713이 소수인지 확인하려면, 
# 713 나누기 2의 나머지가 0이 아니어야 함
# 713 나누기 3의 나머지가 0이 아니어야 함
# 713 나누기 4의 나머지가 0이 아니어야 함
# 713 나누기 712의 나머지가 0이 아니어야 함
# 소수가 됨
# 중간에 나머지가 0인 것이 하나라도 있으면 소수가 아닙니다
# 뒤에 있는 다른 숫자로 나눌 필요도 없습니다.

def isPrimaryNum_713() : 
    num = 713
    result = True
    
    for i in range(2, num, 1) :
        # 713 % 2 의 결과가 0이냐? 그러면 713 소수가 아니야.
        if num % i == 0 :
            result = False
            break
            
        i = i + 1
        
    if result :
        print(num, "은(는) 소수 입니다")
    else :
        print(num, "은(는)", i, "의 배수입니다.")
            
isPrimaryNum_713()
출력
713 은(는) 23 의 배수입니다.


# 어떤 수가 소수인지 판별할 수 있는 함수 isPrimaryNum()함수를 생성해 주세요.
def isPrimaryNum(num) :
    result = True
    
    for i in range(2, num, 1) :
        
        if num % i == 0 :
            result = False
            break 
              
    if result :
        print(num, "은(는) 소수 입니다")
    else :
        print(num, "은(는)", i, "의 배수입니다.")
        
isPrimaryNum(3)
출력
4 은(는) 2 의 배수입니다.  값을 넣을 때마다 출력됨
​

# 2~50에 있는 숫자들 중에서 모든 소수 찾기
# findSossu()함수 
# 반복문은 for 문 사용
#  isPrimaryNum() 함수를 이용하세요

def findSossu() : 
 
    for i in range(2, 51, 1) :
        isPrimaryNum(i)
findSossu()
출력
2 은(는) 소수 입니다
3 은(는) 소수 입니다
4 은(는) 2 의 배수입니다.
5 은(는) 소수 입니다
6 은(는) 2 의 배수입니다.
7 은(는) 소수 입니다
8 은(는) 2 의 배수입니다.
9 은(는) 3 의 배수입니다.
10 은(는) 2 의 배수입니다.
11 은(는) 소수 입니다
12 은(는) 2 의 배수입니다.
13 은(는) 소수 입니다
14 은(는) 2 의 배수입니다.
15 은(는) 3 의 배수입니다.
16 은(는) 2 의 배수입니다.
17 은(는) 소수 입니다
18 은(는) 2 의 배수입니다.
19 은(는) 소수 입니다
20 은(는) 2 의 배수입니다.
21 은(는) 3 의 배수입니다.
22 은(는) 2 의 배수입니다.
23 은(는) 소수 입니다
24 은(는) 2 의 배수입니다.
25 은(는) 5 의 배수입니다.
26 은(는) 2 의 배수입니다.
27 은(는) 3 의 배수입니다.
28 은(는) 2 의 배수입니다.
29 은(는) 소수 입니다
30 은(는) 2 의 배수입니다.
31 은(는) 소수 입니다
32 은(는) 2 의 배수입니다.
33 은(는) 3 의 배수입니다.
34 은(는) 2 의 배수입니다.
35 은(는) 5 의 배수입니다.
36 은(는) 2 의 배수입니다.
37 은(는) 소수 입니다
38 은(는) 2 의 배수입니다.
39 은(는) 3 의 배수입니다.
40 은(는) 2 의 배수입니다.
41 은(는) 소수 입니다
42 은(는) 2 의 배수입니다.
43 은(는) 소수 입니다
44 은(는) 2 의 배수입니다.
45 은(는) 3 의 배수입니다.
46 은(는) 2 의 배수입니다.
47 은(는) 소수 입니다
48 은(는) 2 의 배수입니다.
49 은(는) 7 의 배수입니다.
50 은(는) 2 의 배수입니다.


*
**
***
****
***** 찍기

for i in range(1, 6, 1) :
    print("*" * i)


*
**
***
****
*****
*****
****
***
**
*  찍기
for i in range(1, 6, 1) :           이렇게도 할수 있지만 저렙임
    print("*" * i)

for j in range(6, 11, 1) :
    print("*" * (10-j+1))
    
또는

for i in range(1, 11, 1) :
    if i <= 5 :
        print("*" * i)
    else :
        print("*" * (10-i+1))  이렇게 작성해야됨










































































































